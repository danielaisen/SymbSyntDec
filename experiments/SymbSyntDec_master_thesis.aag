aag 139 6 35 1 98
2
4
6
8
10
12
14 16
18 20
22 24
26 28
30 32
34 36
38 40
42 44
46 48
50 52
54 56
58 60
62 64
66 68
70 72
74 76
78 80
82 1
16 197
24 203
32 209
48 213
52 217
56 223
60 227
76 231
80 235
20 241
28 251
36 255
40 259
44 263
64 267
68 271
72 279
84
84 82 190
86 12 3
88 13 67
90 2 13
92 90 55
94 9 64
96 95 13
98 96 55
100 95 7
102 100 31
104 8 13
106 9 35
108 12 9
110 108 23
112 7 9
114 11 13
116 112 114
118 42 117
120 119 15
122 117 6
124 8 10
126 122 124
128 126 12
130 74 117
132 46 7
134 9 11
136 132 134
138 136 13
140 42 3
142 140 5
144 143 51
146 3 5
148 2 4
150 147 149
152 78 151
154 58 147
156 145 153
158 155 72
160 156 158
162 99 103
164 105 107
166 111 40
168 121 129
170 131 139
172 28 161
174 162 164
176 166 168
178 170 172
180 174 176
182 180 178
184 87 89
186 93 20
188 184 186
190 188 183
192 83 0
194 82 121
196 193 195
198 9 23
200 82 199
202 193 201
204 7 31
206 82 205
208 193 207
210 82 74
212 193 211
214 82 145
216 193 215
218 13 55
220 82 219
222 193 221
224 82 78
226 193 225
228 82 117
230 193 229
232 82 146
234 193 233
236 83 1
238 82 186
240 237 239
242 129 131
244 139 28
246 242 244
248 82 246
250 237 249
252 82 164
254 237 253
256 82 166
258 237 257
260 82 0
262 237 261
264 82 94
266 237 265
268 82 184
270 237 269
272 153 155
274 272 72
276 82 274
278 237 277
i0 controllable_ship
i1 controllable_skip
i2 i_regaddr
i3 i_open
i4 i_reqc
i5 i_pay
l0 latch_x_var1
l1 latch_x_var1_prime
l2 latch_x_var2
l3 latch_x_var2_prime
l4 latch_x_var3
l5 latch_x_var3_prime
l6 latch_x_var4
l7 latch_x_var4_prime
l8 latch_x_var5
l9 latch_x_var5_prime
l10 latch_x_var6
l11 latch_x_var6_prime
l12 latch_x_var7
l13 latch_x_var7_prime
l14 latch_x_var8
l15 latch_x_var8_prime
l16 latch_x_var9
l17 latch_x_var9_prime
l18 latch_x_var10
l19 latch_x_var10_prime
l20 latch_x_var11
l21 latch_x_var11_prime
l22 latch_x_var12
l23 latch_x_var12_prime
l24 latch_x_var13
l25 latch_x_var13_prime
l26 latch_x_var14
l27 latch_x_var14_prime
l28 latch_x_var15
l29 latch_x_var15_prime
l30 latch_x_var16
l31 latch_x_var16_prime
l32 latch_x_var17
l33 latch_x_var17_prime
l34 latch_init
o0 F(X)
c

---state var:
x_var1: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (or regaddr open reqc pay))))
x_var2: (weakbefore (triggers false (or (not ship) (since PropositionalTrue(Logic.PLTL) pay))))
x_var3: (before (since PropositionalTrue(Logic.PLTL) open))
x_var4: (weakbefore (triggers false (and (or (not (or regaddr open reqc pay)) (not (and regaddr open reqc pay))) (or (not (before (or regaddr open reqc pay))) (and (not regaddr) (not open) (not reqc) (not pay))) (or (not (before (before (or regaddr open reqc pay)))) regaddr open reqc pay))))
x_var5: (before (since PropositionalTrue(Logic.PLTL) regaddr))
x_var6: (weakbefore (triggers open (or (not open) pay)))
x_var7: (weakbefore (triggers false (or (not pay) (since PropositionalTrue(Logic.PLTL) open))))
x_var8: (weakbefore false)
x_var9: (before (before (or regaddr open reqc pay)))
x_var10: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (not ship) (not skip))))
x_var11: (before (since PropositionalTrue(Logic.PLTL) pay))
x_var12: (before (before (and (not ship) (not skip))))
x_var13: (weakbefore (triggers false (not open)))
x_var14: (weakbefore (triggers pay (or (not pay) ship)))
x_var15: (weakbefore (triggers false (and (or (not (before (and (not ship) (not skip)))) (and (or ship skip) (not (and ship skip)))) (or (not (before (before (and (not ship) (not skip))))) (and (not ship) (not skip))))))
x_var16: (before (or regaddr open reqc pay))
x_var17: (before (and (not ship) (not skip)))

---
initial state:
(and (not x_var1) (not x_var3) (not x_var5) (not x_var9) (not x_var10) (not x_var11) (not x_var12) (not x_var16) (not x_var17) x_var2 x_var4 x_var6 x_var7 x_var8 x_var13 x_var14 x_var15) 
---
transition relation:
x_var1_prime iff (or (and x_var8 (or regaddr open reqc pay)) (and PropositionalTrue(Logic.PLTL) x_var1))
x_var3_prime iff (or open (and PropositionalTrue(Logic.PLTL) x_var3))
x_var5_prime iff (or regaddr (and PropositionalTrue(Logic.PLTL) x_var5))
x_var9_prime iff x_var16
x_var10_prime iff (or (and x_var8 (not ship) (not skip)) (and PropositionalTrue(Logic.PLTL) x_var10))
x_var11_prime iff (or pay (and PropositionalTrue(Logic.PLTL) x_var11))
x_var12_prime iff x_var17
x_var16_prime iff (or regaddr open reqc pay)
x_var17_prime iff (and (not ship) (not skip))
x_var2_prime iff (and (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var11)) (or false x_var2))
x_var4_prime iff (and (or (not (or regaddr open reqc pay)) (not (and regaddr open reqc pay))) (or (not x_var16) (and (not regaddr) (not open) (not reqc) (not pay))) (or (not x_var9) regaddr open reqc pay) (or false x_var4))
x_var6_prime iff (and (or (not open) pay) (or open x_var6))
x_var7_prime iff (and (or (not pay) open (and PropositionalTrue(Logic.PLTL) x_var3)) (or false x_var7))
x_var8_prime iff false
x_var13_prime iff (and (not open) (or false x_var13))
x_var14_prime iff (and (or (not pay) ship) (or pay x_var14))
x_var15_prime iff (and (or (not x_var17) (and (or ship skip) (not (and ship skip)))) (or (not x_var12) (and (not ship) (not skip))) (or false x_var15))
---
final state: 
(and (or (not pay) ship) (or pay x_var14) (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var11)) (or false x_var2) (or (not (and (or (and (not open) (or false x_var13)) pay (and PropositionalTrue(Logic.PLTL) x_var11)) (or (and (not open) (or false x_var13)) regaddr (and PropositionalTrue(Logic.PLTL) x_var5)) (or (not open) pay) (or open x_var6) (or (not pay) open (and PropositionalTrue(Logic.PLTL) x_var3)) (or false x_var7) (or (and x_var8 (or regaddr open reqc pay)) (and PropositionalTrue(Logic.PLTL) x_var1)) (or (not (or regaddr open reqc pay)) (not (and regaddr open reqc pay))) (or (not x_var16) (and (not regaddr) (not open) (not reqc) (not pay))) (or (not x_var9) regaddr open reqc pay) (or false x_var4))) (and (or (and x_var8 (not ship) (not skip)) (and PropositionalTrue(Logic.PLTL) x_var10)) (or (not x_var17) (and (or ship skip) (not (and ship skip)))) (or (not x_var12) (and (not ship) (not skip))) (or false x_var15))))
