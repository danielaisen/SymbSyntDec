aag 207 5 59 1 143
2
4
6
8
10
12 14
16 18
20 22
24 26
28 30
32 34
36 38
40 42
44 46
48 50
52 54
56 58
60 62
64 66
68 70
72 74
76 78
80 82
84 86
88 90
92 94
96 98
100 102
104 106
108 110
112 114
116 118
120 122
124 126
128 1
14 281
30 287
34 291
38 295
42 299
54 303
58 307
66 313
74 317
90 321
102 325
18 331
22 335
26 341
46 345
50 349
62 353
70 357
78 361
82 367
86 375
94 379
98 383
106 387
110 393
114 397
118 403
122 409
126 415
130
130 128 274
132 2 9
134 132 29
136 8 5
138 136 3
140 3 17
142 139 141
144 5 143
146 4 9
148 146 29
150 10 5
152 150 124
154 151 98
156 154 72
158 153 157
160 4 7
162 160 65
164 10 125
166 4 11
168 166 120
170 167 78
172 170 100
174 169 173
176 9 114
178 177 7
180 178 65
182 8 117
184 160 120
186 161 106
188 186 88
190 185 189
192 7 9
194 192 11
196 92 195
198 197 33
200 195 6
202 8 10
204 200 202
206 52 195
208 40 7
210 9 11
212 208 210
214 92 3
216 214 5
218 217 37
220 3 5
222 2 4
224 221 223
226 56 225
228 12 221
230 219 227
232 229 86
234 230 232
236 165 22
238 175 181
240 183 46
242 191 199
244 205 207
246 213 62
248 236 238
250 240 242
252 244 246
254 248 250
256 252 235
258 254 256
260 135 70
262 145 149
264 82 159
266 163 50
268 260 262
270 264 266
272 268 270
274 272 259
276 129 0
278 128 56
280 277 279
282 9 29
284 128 283
286 277 285
288 128 199
290 277 289
292 128 219
294 277 293
296 128 52
298 277 297
300 128 195
302 277 301
304 128 220
306 277 305
308 7 65
310 128 309
312 277 311
314 128 159
316 277 315
318 128 191
320 277 319
322 128 175
324 277 323
326 129 1
328 128 142
330 327 329
332 128 236
334 327 333
336 5 26
338 128 336
340 327 339
342 128 240
344 327 343
346 128 266
348 327 347
350 128 252
352 327 351
354 128 260
356 327 355
358 128 170
360 327 359
362 149 82
364 128 362
366 327 365
368 227 229
370 368 86
372 128 370
374 327 373
376 128 0
378 327 377
380 128 154
382 327 381
384 128 186
386 327 385
388 11 110
390 128 388
392 327 391
394 128 176
396 327 395
398 9 118
400 128 398
402 327 401
404 5 122
406 128 404
408 327 407
410 11 126
412 128 410
414 327 413
i0 controllable_refund
i1 controllable_ship
i2 i_set
i3 i_pay
i4 i_cancel
l0 latch_x_var1
l1 latch_x_var1_prime
l2 latch_x_var2
l3 latch_x_var2_prime
l4 latch_x_var3
l5 latch_x_var3_prime
l6 latch_x_var4
l7 latch_x_var4_prime
l8 latch_x_var5
l9 latch_x_var5_prime
l10 latch_x_var6
l11 latch_x_var6_prime
l12 latch_x_var7
l13 latch_x_var7_prime
l14 latch_x_var8
l15 latch_x_var8_prime
l16 latch_x_var9
l17 latch_x_var9_prime
l18 latch_x_var10
l19 latch_x_var10_prime
l20 latch_x_var11
l21 latch_x_var11_prime
l22 latch_x_var12
l23 latch_x_var12_prime
l24 latch_x_var13
l25 latch_x_var13_prime
l26 latch_x_var14
l27 latch_x_var14_prime
l28 latch_x_var15
l29 latch_x_var15_prime
l30 latch_x_var16
l31 latch_x_var16_prime
l32 latch_x_var17
l33 latch_x_var17_prime
l34 latch_x_var18
l35 latch_x_var18_prime
l36 latch_x_var19
l37 latch_x_var19_prime
l38 latch_x_var20
l39 latch_x_var20_prime
l40 latch_x_var21
l41 latch_x_var21_prime
l42 latch_x_var22
l43 latch_x_var22_prime
l44 latch_x_var23
l45 latch_x_var23_prime
l46 latch_x_var24
l47 latch_x_var24_prime
l48 latch_x_var25
l49 latch_x_var25_prime
l50 latch_x_var26
l51 latch_x_var26_prime
l52 latch_x_var27
l53 latch_x_var27_prime
l54 latch_x_var28
l55 latch_x_var28_prime
l56 latch_x_var29
l57 latch_x_var29_prime
l58 latch_init
o0 F(X)
c

---state var:
x_var1: (before (before (and (not refund) (not ship))))
x_var2: (weakbefore (triggers refund (or (not pay) ship refund)))
x_var3: (weakbefore (triggers false (or (not cancel) (weakbefore (triggers false (not cancel))))))
x_var4: (weakbefore (triggers false (not ship)))
x_var5: (before (since PropositionalTrue(Logic.PLTL) pay))
x_var6: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (or set pay cancel))))
x_var7: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (not refund) (not ship))))
x_var8: (before (before (or set pay cancel)))
x_var9: (weakbefore (triggers false (or (not pay) (weakbefore (triggers false (not pay))))))
x_var10: (weakbefore (triggers false (or (not ship) (since PropositionalTrue(Logic.PLTL) set))))
x_var11: (before (or set pay cancel))
x_var12: (before (and (not refund) (not ship)))
x_var13: (weakbefore (triggers false (and (or (not (or set pay cancel)) (not (and set pay cancel))) (or (not (before (or set pay cancel))) (and (not set) (not pay) (not cancel))) (or (not (before (before (or set pay cancel)))) set pay cancel))))
x_var14: (before (since PropositionalTrue(Logic.PLTL) set))
x_var15: (weakbefore (triggers false (or (not refund) (since PropositionalTrue(Logic.PLTL) pay))))
x_var16: (before (since (triggers false (or (not cancel) ship)) (and cancel (not ship) (weakbefore (triggers false (not cancel))))))
x_var17: (weakbefore (triggers false (or (not ship) cancel)))
x_var18: (weakbefore (triggers false (or (not ship) (since PropositionalTrue(Logic.PLTL) pay))))
x_var19: (weakbefore (triggers false (and (or (not (before (and (not refund) (not ship)))) (and (or refund ship) (not (and refund ship)))) (or (not (before (before (and (not refund) (not ship))))) (and (not refund) (not ship))))))
x_var20: (before (since (triggers false (or (not ship) set)) (and ship (not set) (weakbefore (triggers false (not ship))))))
x_var21: (weakbefore false)
x_var22: (weakbefore (triggers false (or (not cancel) ship)))
x_var23: (before (since (triggers false (or (not ship) cancel)) (and ship (not cancel) (weakbefore (triggers false (not ship))))))
x_var24: (weakbefore (triggers false (or (not ship) set)))
x_var25: (weakbefore (triggers false (not cancel)))
x_var26: (weakbefore (triggers false (not pay)))
x_var27: (weakbefore (and (not pay) (or false (weakbefore (triggers false (not pay))))))
x_var28: (weakbefore (and (not ship) (or false (weakbefore (triggers false (not ship))))))
x_var29: (weakbefore (and (not cancel) (or false (weakbefore (triggers false (not cancel))))))

---
initial state: (and (not x_var1) (not x_var5) (not x_var6) (not x_var7) (not x_var8) (not x_var11) (not x_var12) (not x_var14) (not x_var16) (not x_var20) (not x_var23) x_var2 x_var3 x_var4 x_var9 x_var10 x_var13 x_var15 x_var17 x_var18 x_var19 x_var21 x_var22 x_var24 x_var25 x_var26 x_var27 x_var28 x_var29) 
---
transition relation:x_var1_prime iff x_var12
x_var5_prime iff (or pay (and PropositionalTrue(Logic.PLTL) x_var5))
x_var6_prime iff (or (and x_var21 (or set pay cancel)) (and PropositionalTrue(Logic.PLTL) x_var6))
x_var7_prime iff (or (and x_var21 (not refund) (not ship)) (and PropositionalTrue(Logic.PLTL) x_var7))
x_var8_prime iff x_var11
x_var11_prime iff (or set pay cancel)
x_var12_prime iff (and (not refund) (not ship))
x_var14_prime iff (or set (and PropositionalTrue(Logic.PLTL) x_var14))
x_var16_prime iff (or (and cancel (not ship) x_var29) (and (or (not cancel) ship) (or false x_var22) x_var16))
x_var20_prime iff (or (and ship (not set) x_var28) (and (or (not ship) set) (or false x_var24) x_var20))
x_var23_prime iff (or (and ship (not cancel) x_var28) (and (or (not ship) cancel) (or false x_var17) x_var23))
x_var2_prime iff (and (or (not pay) ship refund) (or refund x_var2))
x_var3_prime iff (and (or (not cancel) x_var29) (or false x_var3))
x_var4_prime iff (and (not ship) (or false x_var4))
x_var9_prime iff (and (or (not pay) x_var27) (or false x_var9))
x_var10_prime iff (and (or (not ship) set (and PropositionalTrue(Logic.PLTL) x_var14)) (or false x_var10))
x_var13_prime iff (and (or (not (or set pay cancel)) (not (and set pay cancel))) (or (not x_var11) (and (not set) (not pay) (not cancel))) (or (not x_var8) set pay cancel) (or false x_var13))
x_var15_prime iff (and (or (not refund) pay (and PropositionalTrue(Logic.PLTL) x_var5)) (or false x_var15))
x_var17_prime iff (and (or (not ship) cancel) (or false x_var17))
x_var18_prime iff (and (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var5)) (or false x_var18))
x_var19_prime iff (and (or (not x_var12) (and (or refund ship) (not (and refund ship)))) (or (not x_var1) (and (not refund) (not ship))) (or false x_var19))
x_var21_prime iff false
x_var22_prime iff (and (or (not cancel) ship) (or false x_var22))
x_var24_prime iff (and (or (not ship) set) (or false x_var24))
x_var25_prime iff (and (not cancel) (or false x_var25))
x_var26_prime iff (and (not pay) (or false x_var26))
x_var27_prime iff (and (not pay) (or false x_var27))
x_var28_prime iff (and (not ship) (or false x_var28))
x_var29_prime iff (and (not cancel) (or false x_var29))
---
final state: (and (or (not refund) pay (and PropositionalTrue(Logic.PLTL) x_var5)) (or false x_var15) (or ship (and (or (not pay) ship refund) (or refund x_var2))) (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var5)) (or false x_var18) (or (and cancel (not ship) x_var29) (and (or (not cancel) ship) (or false x_var22) x_var16)) (or (not ship) set (and PropositionalTrue(Logic.PLTL) x_var14)) (or false x_var10) (or (not (and (or (not cancel) x_var29) (or false x_var3) (or (and ship (not cancel) x_var28) (and (or (not ship) cancel) (or false x_var17) x_var23)) (or (and (not pay) (or false x_var26)) set (and PropositionalTrue(Logic.PLTL) x_var14)) (or (not pay) x_var27) (or false x_var9) (or (and ship (not set) x_var28) (and (or (not ship) set) (or false x_var24) x_var20)) (or (and x_var21 (or set pay cancel)) (and PropositionalTrue(Logic.PLTL) x_var6)) (or (not (or set pay cancel)) (not (and set pay cancel))) (or (not x_var11) (and (not set) (not pay) (not cancel))) (or (not x_var8) set pay cancel) (or false x_var13))) (and (or (and x_var21 (not refund) (not ship)) (and PropositionalTrue(Logic.PLTL) x_var7)) (or (not x_var12) (and (or refund ship) (not (and refund ship)))) (or (not x_var1) (and (not refund) (not ship))) (or false x_var19))))
